type Query {
  config: Config!
  user(id: ID!): User!
  users: [User!]!
  post(id: ID!): Post!
  posts(query: String): [Post!]!
  comments: [Comment!]!
}
type Mutation {
  createUser(user: createUserInput!): User!
  deleteUser(userId: ID!): User!
  createPost(post: createPostInput!): Post!
  deletePost(postId: ID!): Post!
  createComment(comment: createCommentInput!): Comment!
  deleteComment(commentId: ID!): Comment!
}
input createUserInput {
  name: String!,
  email: String!,
  age: Int
}
input createPostInput {
  title: String!,
  body: String!,
  published: Boolean!,
  authorId: ID!
}
input createCommentInput {
  text: String!,
  authorId: ID!,
  postId: ID!
}
type User {
  id: ID!
  name: String!
  email: String!
  age: Int
  posts: [Post!]!
  comments: [Comment!]!
}
type Post {
  id: ID!
  title: String!
  body: String!
  published: Boolean!
  author: User!
  comments: [Comment!]!
}
type Comment {
  id: ID!
  text: String!
  author: User!
  post: Post!
}
type Config {
  premium: Boolean!
  theme: String!
  font: Int!
}
